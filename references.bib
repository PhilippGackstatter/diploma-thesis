% Encoding: UTF-8

@InProceedings{Hall2019,
  author    = {Hall, Adam and Ramachandran, Umakishore},
  booktitle = {Proceedings of the International Conference on Internet of Things Design and Implementation},
  title     = {An Execution Model for Serverless Functions at the Edge},
  doi       = {10.1145/3302505.3310084},
  isbn      = {9781450362832},
  location  = {Montreal, Quebec, Canada},
  pages     = {225–236},
  publisher = {Association for Computing Machinery},
  series    = {IoTDI '19},
  url       = {https://doi.org/10.1145/3302505.3310084},
  abstract  = {Serverless computing platforms allow developers to host single-purpose applications that automatically scale with demand. In contrast to traditional long-running applications on dedicated, virtualized, or container-based platforms, serverless applications are intended to be instantiated when called, execute a single function, and shut down when finished. State-of-the-art serverless platforms achieve these goals by creating a new container instance to host a function when it is called and destroying the container when it completes. This design allows for cost and resource savings when hosting simple applications, such as those supporting IoT devices at the edge of the network. However, the use of containers introduces some overhead which may be unsuitable for applications requiring low-latency response or hardware platforms with limited resources, such as those served by edge computing environments. In this paper, we present a nomenclature for characterizing server-less function access patterns which allows us to derive the basic requirements of a serverless computing runtime. We then propose the use of WebAssembly as an alternative method for running serverless applications while meeting these requirements. Finally, we demonstrate how a WebAssembly-based serverless platform provides many of the same isolation and performance guarantees of container-based platforms while reducing average application start times and the resources needed to host them.},
  address   = {New York, NY, USA},
  keywords  = {webassembly, serverless, edge computing, function-as-a-service, FaaS, fog computing},
  numpages  = {12},
  year      = {2019},
}

@InProceedings{Murphy2020,
  author    = {Murphy, Se{\'a}n and Persaud, Leonardas and Martini, William and Bosshard, Bill},
  booktitle = {Agile Processes in Software Engineering and Extreme Programming -- Workshops},
  title     = {On the Use of Web Assembly in a Serverless Context},
  editor    = {Paasivaara, Maria and Kruchten, Philippe},
  isbn      = {978-3-030-58858-8},
  pages     = {141--145},
  publisher = {Springer International Publishing},
  abstract  = {This paper considers how WASM can be run in different serverless contexts. A comparison of different serverside WASM runtime options is considered, specifically focused on wasmer, wasmtime and lucet. Next, different options for running WASM within two serverless platforms -- Openwhisk and AWS Lambdai -- are compared. Initial results show that a solution which uses the built-in node.js WASM supports is found to work better than using the dedicated WASM runtimes but this has limitations and providing more direct integration with WASM runtimes should be explored further.},
  address   = {Cham},
  year      = {2020},
}

@InProceedings{Manner2018,
  author    = {J. {Manner} and M. {Endreß} and T. {Heckel} and G. {Wirtz}},
  booktitle = {2018 IEEE/ACM International Conference on Utility and Cloud Computing Companion (UCC Companion)},
  title     = {Cold Start Influencing Factors in Function as a Service},
  doi       = {10.1109/UCC-Companion.2018.00054},
  pages     = {181-188},
  year      = {2018},
}

@InProceedings{Mohan2019,
  author    = {Anup Mohan and Harshad Sane and Kshitij Doshi and Saikrishna Edupuganti and Naren Nayak and Vadim Sukhomlinov},
  booktitle = {11th {USENIX} Workshop on Hot Topics in Cloud Computing (HotCloud 19)},
  title     = {Agile Cold Starts for Scalable Serverless},
  publisher = {{USENIX} Association},
  url       = {https://www.usenix.org/conference/hotcloud19/presentation/mohan},
  address   = {Renton, WA},
  month     = jul,
  year      = {2019},
}

@Online{W3C2020,
  author  = {W3C},
  date    = {2020-10-25},
  title   = {WebAssembly Website},
  url     = {https://webassembly.org/},
  urldate = {2020-10-25},
}

@Online{fastly2019,
  author  = {fastly},
  date    = {2019-03-29},
  title   = {Announcing Lucet: Fastly’s native WebAssembly compiler and runtime},
  url     = {https://www.fastly.com/blog/announcing-lucet-fastly-native-webassembly-compiler-runtime},
  urldate = {2020-10-25},
}

@Online{Hykes2019,
  author  = {Solomon Hykes},
  date    = {2019-03-27},
  title   = {WASM+WASI Tweet},
  url     = {https://twitter.com/solomonstre/status/1111004913222324225},
  urldate = {2020-10-25},
}

@Online{Apache2020,
  author  = {Apache},
  date    = {2020-10-26},
  title   = {Apache OpenWhisk},
  url     = {https://openwhisk.apache.org/},
  urldate = {2020-10-26},
}

@MastersThesis{Napieralla2020,
  author = {Napieralla, Jonah},
  title  = {Considering WebAssembly Containers for Edge Computing on Hardware-Constrained IoT Devices},
  year   = {2020},
}

@Online{Alliance2020,
  author  = {Bytecode Alliance},
  date    = {2020-10-30},
  title   = {Cache Configuration of wasmtime},
  url     = {https://docs.wasmtime.dev/cli-cache.html#how-does-the-cache-work},
  urldate = {2020-10-30},
}

@Article{Nastic2017,
  author  = {S. {Nastic} and T. {Rausch} and O. {Scekic} and S. {Dustdar} and M. {Gusev} and B. {Koteska} and M. {Kostoska} and B. {Jakimovski} and S. {Ristov} and R. {Prodan}},
  title   = {A Serverless Real-Time Data Analytics Platform for Edge Computing},
  doi     = {10.1109/MIC.2017.2911430},
  number  = {4},
  pages   = {64-71},
  volume  = {21},
  journal = {IEEE Internet Computing},
  year    = {2017},
}

@InProceedings{Rausch2019,
  author    = {Thomas Rausch and Waldemar Hummer and Vinod Muthusamy and Alexander Rashed and Schahram Dustdar},
  booktitle = {2nd {USENIX} Workshop on Hot Topics in Edge Computing (HotEdge 19)},
  title     = {Towards a Serverless Platform for Edge {AI}},
  publisher = {{USENIX} Association},
  url       = {https://www.usenix.org/conference/hotedge19/presentation/rausch},
  address   = {Renton, WA},
  month     = jul,
  year      = {2019},
}

@Online{Wasmer2020,
  author  = {Wasmer, Inc.},
  date    = {2020-12-01},
  title   = {Wasmer Website},
  url     = {https://wasmer.io/},
  urldate = {2020-12-01},
}

@Online{Alliance2020a,
  author  = {Bytecode Alliance},
  date    = {2020-11-01},
  title   = {WebAssembly Micro Runtime GitHub},
  url     = {https://github.com/bytecodealliance/wasm-micro-runtime/},
  urldate = {2020-11-01},
}

@Online{Alliance2020c,
  author  = {Bytecode Alliance},
  date    = {2020-11-01},
  title   = {Wasmtime Website},
  url     = {https://wasmtime.dev/},
  urldate = {2020-11-01},
}

@Online{Alliance2020b,
  author  = {Bytecode Alliance},
  date    = {2020-11-01},
  title   = {Lucet GitHub},
  url     = {https://github.com/bytecodealliance/lucet},
  urldate = {2020-11-01},
}

@InProceedings{Shahrad2020,
  author    = {Mohammad Shahrad and Rodrigo Fonseca and Inigo Goiri and Gohar Chaudhry and Paul Batum and Jason Cooke and Eduardo Laureano and Colby Tresness and Mark Russinovich and Ricardo Bianchini},
  booktitle = {2020 {USENIX} Annual Technical Conference ({USENIX} {ATC} 20)},
  title     = {Serverless in the Wild: Characterizing and Optimizing the Serverless Workload at a Large Cloud Provider},
  isbn      = {978-1-939133-14-4},
  pages     = {205--218},
  publisher = {{USENIX} Association},
  url       = {https://www.usenix.org/conference/atc20/presentation/shahrad},
  month     = jul,
  year      = {2020},
}

@Online{Herman2014,
  author  = {David Herman and Luke Wagner and Alon Zakai},
  date    = {2014-08-18},
  title   = {asm.jsWorking Draft},
  url     = {http://asmjs.org/spec/latest/},
  urldate = {2021-02-14},
}

@Online{Zakai2013,
  author  = {Alon Zakai and Robert Nyman},
  date    = {2013-12-20},
  title   = {Gap between asm.js and native performance gets even narrower with float32 optimizations},
  url     = {https://hacks.mozilla.org/2013/12/gap-between-asm-js-and-native-performance-gets-even-narrower-with-float32-optimizations/},
  urldate = {2021-02-14},
}

@Online{Clark2019,
  author  = {Lin Clark},
  date    = {2019-03-27},
  title   = {Standardizing WASI: A system interface to run WebAssembly outside the web},
  url     = {https://hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface/},
  urldate = {2021-02-14},
}

@InProceedings{Haas2017,
  author    = {Haas, Andreas and Rossberg, Andreas and Schuff, Derek L. and Titzer, Ben L. and Holman, Michael and Gohman, Dan and Wagner, Luke and Zakai, Alon and Bastien, JF},
  booktitle = {Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  title     = {Bringing the Web up to Speed with WebAssembly},
  doi       = {10.1145/3062341.3062363},
  isbn      = {9781450349888},
  location  = {Barcelona, Spain},
  pages     = {185–200},
  publisher = {Association for Computing Machinery},
  series    = {PLDI 2017},
  url       = {https://doi.org/10.1145/3062341.3062363},
  abstract  = {The maturation of the Web platform has given rise to sophisticated and demanding Web applications such as interactive 3D visualization, audio and video software, and games. With that, efficiency and security of code on the Web has become more important than ever. Yet JavaScript as the only built-in language of the Web is not well-equipped to meet these requirements, especially as a compilation target.  Engineers from the four major browser vendors have risen to the challenge and collaboratively designed a portable low-level bytecode called WebAssembly. It offers compact representation, efficient validation and compilation, and safe low to no-overhead execution. Rather than committing to a specific programming model, WebAssembly is an abstraction over modern hardware, making it language-, hardware-, and platform-independent, with use cases beyond just the Web. WebAssembly has been designed with a formal semantics from the start. We describe the motivation, design and formal semantics of WebAssembly and provide some preliminary experience with implementations.},
  address   = {New York, NY, USA},
  keywords  = {assembly languages, virtual machines, type systems, just-in-time compilers, programming languages},
  numpages  = {16},
  year      = {2017},
}

@inproceedings {NotSoFast,
author = {Abhinav Jangda and Bobby Powers and Emery D. Berger and Arjun Guha},
title = {Not So Fast: Analyzing the Performance of WebAssembly vs. Native Code},
booktitle = {2019 {USENIX} Annual Technical Conference ({USENIX} {ATC} 19)},
year = {2019},
isbn = {978-1-939133-03-8},
address = {Renton, WA},
pages = {107--120},
url = {https://www.usenix.org/conference/atc19/presentation/jangda},
publisher = {{USENIX} Association},
month = jul,
}

@Online{Cloudflare2021,
  author  = {Cloudflare},
  date    = {2021-02-12},
  title   = {How Workers works},
  url     = {https://developers.cloudflare.com/workers/learning/how-workers-works},
  urldate = {2021-02-18},
}

@Online{OpenWhiskSystemDesign,
  author  = {Apache OpenWhisk Developers},
  date    = {2019-08-14},
  title   = {OpenWhisk system overview},
  url     = {https://github.com/apache/openwhisk/blob/b5b88ece0ae08c87948796b38ab18e55ab4b70a7/docs/about.md},
  urldate = {2021-02-19},
}

@Online{Turon2021,
  author  = {Aaron Turon and Wonwoo Choi and Yoshua Wuyts},
  date    = {2021-02-26},
  title   = {Tide},
  url     = {https://crates.io/crates/tide},
  urldate = {2021-02-26},
}

@Online{Kub2021,
  author  = {The Kubernetes Authors},
  date    = {2021-03-04},
  title   = {Kubernetes},
  url     = {https://kubernetes.io/},
  urldate = {2021-03-04},
}

@Online{OWKub2020,
  author  = {Apache OpenWhisk Developers},
  date    = {2020-08-19},
  title   = {OpenWhisk Deploy Kube: Configuration Choices},
  url     = {https://github.com/apache/openwhisk-deploy-kube/blob/281c0ace1dbede3cbd18b0aecf0775fb3dff4bdb/docs/configurationChoices.md},
  urldate = {2021-03-04},
}

@Online{Krustlet2021,
  author  = {Deislabs},
  date    = {2021-03-04},
  title   = {Krustlet},
  url     = {https://github.com/deislabs/krustlet},
  urldate = {2021-03-04},
}

@Online{WC2021,
  author  = {WasmCloud Team},
  date    = {2021-03-05},
  title   = {Wasmcloud Actor Interfaces},
  url     = {https://github.com/wasmCloud/actor-interfaces},
  urldate = {2021-03-05},
}

@InProceedings{Wang2018,
  author    = {Liang Wang and Mengyuan Li and Yinqian Zhang and Thomas Ristenpart and Michael Swift},
  booktitle = {2018 {USENIX} Annual Technical Conference ({USENIX} {ATC} 18)},
  title     = {Peeking Behind the Curtains of Serverless Platforms},
  isbn      = {ISBN 978-1-939133-01-4},
  pages     = {133--146},
  publisher = {{USENIX} Association},
  url       = {https://www.usenix.org/conference/atc18/presentation/wang-liang},
  address   = {Boston, MA},
  month     = jul,
  year      = {2018},
}

@InProceedings{McGrath2017,
  author    = {G. {McGrath} and P. R. {Brenner}},
  booktitle = {2017 IEEE 37th International Conference on Distributed Computing Systems Workshops (ICDCSW)},
  title     = {Serverless Computing: Design, Implementation, and Performance},
  doi       = {10.1109/ICDCSW.2017.36},
  pages     = {405-410},
  year      = {2017},
}

@InProceedings{Aslanpour2021,
  author    = {Aslanpour, Mohammad S. and Toosi, Adel N. and Cicconetti, Claudio and Javadi, Bahman and Sbarski, Peter and Taibi, Davide and Assuncao, Marcos and Gill, Sukhpal Singh and Gaire, Raj and Dustdar, Schahram},
  booktitle = {2021 Australasian Computer Science Week Multiconference},
  title     = {Serverless Edge Computing: Vision and Challenges},
  doi       = {10.1145/3437378.3444367},
  isbn      = {9781450389563},
  location  = {Dunedin, New Zealand},
  publisher = {Association for Computing Machinery},
  series    = {ACSW '21},
  url       = {https://doi.org/10.1145/3437378.3444367},
  abstract  = {Born from a need for a pure “pay-per-use” model and highly scalable platform, the “Serverless” paradigm emerged and has the potential to become a dominant way of building cloud applications. Although it was originally designed for cloud environments, Serverless is finding its position in the Edge Computing landscape, aiming to bring computational resources closer to the data source. That is, Serverless is crossing cloud borders to assess its merits in Edge computing, whose principal partner will be the Internet of Things (IoT) applications. This move sounds promising as Serverless brings particular benefits such as eliminating always-on services causing high electricity usage, for instance. However, the community is still hesitant to uptake Serverless Edge Computing because of the cloud-driven design of current Serverless platforms, and distinctive characteristics of edge landscape and IoT applications. In this paper, we evaluate both sides to shed light on the Serverless new territory. Our in-depth analysis promotes a broad vision for bringing Serverless to the Edge Computing. It also issues major challenges for Serverless to be met before entering Edge computing.},
  address   = {New York, NY, USA},
  articleno = {10},
  numpages  = {10},
  year      = {2021},
}

@Article{Shi2016,
  author  = {W. {Shi} and S. {Dustdar}},
  title   = {The Promise of Edge Computing},
  doi     = {10.1109/MC.2016.145},
  number  = {5},
  pages   = {78-81},
  volume  = {49},
  journal = {Computer},
  year    = {2016},
}

@InCollection{Nastic2018,
  author    = {Stefan Nastic and Schahram Dustdar},
  booktitle = {The Essence of Software Engineering},
  title     = {Towards Deviceless Edge Computing: Challenges, Design Aspects, and Models for Serverless Paradigm at the Edge},
  doi       = {10.1007/978-3-319-73897-0_8},
  editor    = {Volker Gruhn and Rüdiger Striemer},
  isbn      = {978-3-319-73897-0},
  pages     = {121-136},
  publisher = {Springer},
  url       = {https://doi.org/10.1007/978-3-319-73897-0_8},
  citedby   = {0},
  cites     = {0},
  researchr = {https://researchr.org/publication/NasticD18},
  year      = {2018},
}

@InProceedings{Mendki2020,
  author    = {P. {Mendki}},
  booktitle = {2020 IEEE Cloud Summit},
  title     = {Evaluating Webassembly Enabled Serverless Approach for Edge Computing},
  doi       = {10.1109/IEEECloudSummit48914.2020.00031},
  pages     = {161-166},
  year      = {2020},
}

@Online{ShilCold2021,
  author  = {Mikhail Shilkov},
  date    = {2021-01-05},
  title   = {When Does Cold Start Happen on AWS Lambda?},
  url     = {https://mikhail.io/serverless/coldstarts/aws/intervals/},
  urldate = {2021-03-08},
}

@Article{Eismann2021,
  author  = {S. {Eismann} and J. {Scheuner} and E. {van Eyk} and M. {Schwinger} and J. {Grohmann} and N. {Herbst} and C. L. {Abad} and A. {Iosup}},
  title   = {Serverless Applications: Why, When, and How?},
  doi     = {10.1109/MS.2020.3023302},
  number  = {1},
  pages   = {32-39},
  volume  = {38},
  journal = {IEEE Software},
  year    = {2021},
}

@Misc{Hellerstein2018,
  author        = {Joseph M. Hellerstein and Jose Faleiro and Joseph E. Gonzalez and Johann Schleier-Smith and Vikram Sreekanti and Alexey Tumanov and Chenggang Wu},
  title         = {Serverless Computing: One Step Forward, Two Steps Back},
  eprint        = {1812.03651},
  archiveprefix = {arXiv},
  primaryclass  = {cs.DC},
  year          = {2018},
}

@Misc{Eismann2021a,
  author        = {Simon Eismann and Joel Scheuner and Erwin van Eyk and Maximilian Schwinger and Johannes Grohmann and Nikolas Herbst and Cristina L. Abad and Alexandru Iosup},
  title         = {A Review of Serverless Use Cases and their Characteristics},
  eprint        = {2008.11110},
  archiveprefix = {arXiv},
  primaryclass  = {cs.SE},
  year          = {2021},
}

@Online{Cui2018,
  author  = {Yan Cui},
  date    = {2018-01-15},
  title   = {I’m afraid you’re thinking about AWS Lambda cold starts all wrong},
  url     = {https://hackernoon.com/im-afraid-you-re-thinking-about-aws-lambda-cold-starts-all-wrong-7d907f278a4f},
  urldate = {2021-04-14},
}

@Article{Fox2017,
  author        = {Geoffrey C. Fox and Vatche Ishakian and Vinod Muthusamy and Aleksander Slominski},
  title         = {Status of Serverless Computing and Function-as-a-Service(FaaS) in Industry and Research},
  eprint        = {1708.08028},
  url           = {http://arxiv.org/abs/1708.08028},
  volume        = {abs/1708.08028},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, https://dblp.org},
  biburl        = {https://dblp.org/rec/journals/corr/abs-1708-08028.bib},
  journal       = {CoRR},
  timestamp     = {Mon, 13 Aug 2018 16:46:23 +0200},
  year          = {2017},
}

@Online{AWS2014,
  author  = {AWS},
  date    = {2014-11-13},
  url     = {https://aws.amazon.com/releasenotes/release-aws-lambda-on-2014-11-13/},
  urldate = {2021-04-14},
}

@Article{Castro2019,
  author        = {Paul C. Castro and Vatche Ishakian and Vinod Muthusamy and Aleksander Slominski},
  title         = {The server is dead, long live the server: Rise of Serverless Computing, Overview of Current State and Future Trends in Research and Industry},
  eprint        = {1906.02888},
  url           = {http://arxiv.org/abs/1906.02888},
  volume        = {abs/1906.02888},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, https://dblp.org},
  biburl        = {https://dblp.org/rec/journals/corr/abs-1906-02888.bib},
  journal       = {CoRR},
  timestamp     = {Wed, 04 Dec 2019 15:23:27 +0100},
  year          = {2019},
}

@Online{Rehemaegi2019,
  author  = {Taavi Rehemägi},
  date    = {2019-06-20},
  title   = {State of Lambda functions in 2019 by Dashbird},
  url     = {https://dashbird.io/blog/state-of-lambda-functions-2019/#ok-pretty-cool-but-what-about-their-runtime},
  urldate = {2021-04-24},
}

@Online{Farid2019,
  author  = {Manzoor Farid and Michael Behrendt and Nikhil Gupta and Danielle Kingberg},
  date    = {2019-07-08},
  title   = {Edge Computing for Serverless Applications},
  url     = {https://www.ibm.com/cloud/blog/edge-computing-for-serverless-applications},
  urldate = {2021-04-25},
}

@Online{Denis2019,
  author  = {Frank Denis},
  date    = {2019-02-07},
  title   = {Memory management in WebAssembly: guide for C and Rust programmers},
  url     = {https://www.fastly.com/blog/webassembly-memory-management-guide-for-c-rust-programmers},
  urldate = {2021-04-25},
}

@InProceedings{Lehmann2020,
  author    = {Daniel Lehmann and Johannes Kinder and Michael Pradel},
  booktitle = {29th {USENIX} Security Symposium ({USENIX} Security 20)},
  title     = {Everything Old is New Again: Binary Security of WebAssembly},
  isbn      = {978-1-939133-17-5},
  pages     = {217--234},
  publisher = {{USENIX} Association},
  url       = {https://www.usenix.org/conference/usenixsecurity20/presentation/lehmann},
  month     = aug,
  year      = {2020},
}

@Online{Wingo2020,
  author  = {Andy Wingo},
  date    = {2020-10-15},
  url     = {http://wingolog.org/archives/2020/10/15/on-binary-security-of-webassembly},
  urldate = {2021-04-26},
}

@Online{Alliance2021,
  author  = {Bytecode Alliance},
  date    = {2021-04-23},
  title   = {Cranelift Code Generator},
  url     = {https://github.com/bytecodealliance/wasmtime/tree/main/cranelift},
  urldate = {2021-04-27},
}

@Online{AsyncBook2021,
  author  = {Rust Language Developers},
  date    = {2021-04-27},
  title   = {Asynchronous Programming in Rust},
  url     = {https://rust-lang.github.io/async-book/01_getting_started/02_why_async.html},
  urldate = {2021-04-27},
}

@Online{IBM2021,
  author  = {IBM},
  date    = {2021-04-27},
  title   = {Originless responses},
  url     = {https://cloud.ibm.com/docs/cis?topic=cis-edge-functions-use-cases#originless-responses},
  urldate = {2021-04-27},
}

@Article{Leitner2019,
  author   = {Philipp Leitner and Erik Wittern and Josef Spillner and Waldemar Hummer},
  date     = {2019-03-01},
  title    = {A mixed-method empirical study of Function-as-a-Service software development in industrial practice},
  doi      = {https://doi.org/10.1016/j.jss.2018.12.013},
  issn     = {0164-1212},
  pages    = {340-359},
  url      = {https://www.sciencedirect.com/science/article/pii/S0164121218302735},
  volume   = {149},
  abstract = {Function-as-a-Service (FaaS) describes cloud computing services that make infrastructure components transparent to application developers, thus falling in the larger group of “serverless” computing models. When using FaaS offerings, such as AWS Lambda, developers provide atomic and short-running code for their functions, and FaaS providers execute and horizontally scale them on-demand. Currently, there is no systematic research on how developers use serverless, what types of applications lend themselves to this model, or what architectural styles and practices FaaS-based applications are based on. We present results from a mixed-method study, combining interviews with practitioners who develop applications and systems that use FaaS, a systematic analysis of grey literature, and a Web-based survey. We find that successfully adopting FaaS requires a different mental model, where systems are primarily constructed by composing pre-existing services, with FaaS often acting as the “glue” that brings these services together. Tooling availability and maturity, especially related to testing and deployment, remains a major difficulty. Further, we find that current FaaS systems lack systematic support for function reuse, and abstractions and programming models for building non-trivial FaaS applications are limited. We conclude with a discussion of implications for FaaS providers, software developers, and researchers.},
  journal  = {Journal of Systems and Software},
  keywords = {Cloud computing, Serverless, Function-as-a-Service, Empirical research},
  year     = {2019},
}

@InProceedings{Huang2012,
  author    = {Huang, Bai-Ruei and Lin, Chang Hong and Lee, Chia-Han},
  booktitle = {Anti-counterfeiting, Security, and Identification},
  title     = {Mobile augmented reality based on cloud computing},
  doi       = {10.1109/ICASID.2012.6325354},
  pages     = {1-5},
  year      = {2012},
}

@InProceedings{Baresi2019,
  author    = {Baresi, Luciano and Filgueira Mendonça, Danilo},
  booktitle = {2019 IEEE International Conference on Fog Computing (ICFC)},
  title     = {Towards a Serverless Platform for Edge Computing},
  doi       = {10.1109/ICFC.2019.00008},
  pages     = {1-10},
  year      = {2019},
}

@Misc{Yussupov2020,
  author        = {Vladimir Yussupov and Ghareeb Falazi and Uwe Breitenbücher and Frank Leymann},
  title         = {On the Serverless Nature of Blockchains and Smart Contracts},
  eprint        = {2011.12729},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CR},
  year          = {2020},
}

@Article{Lin2019,
  author        = {Ping{-}Min Lin and Alex Glikson},
  title         = {Mitigating Cold Starts in Serverless Platforms: {A} Pool-Based Approach},
  eprint        = {1903.12221},
  url           = {http://arxiv.org/abs/1903.12221},
  volume        = {abs/1903.12221},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, https://dblp.org},
  biburl        = {https://dblp.org/rec/journals/corr/abs-1903-12221.bib},
  journal       = {CoRR},
  timestamp     = {Tue, 02 Apr 2019 12:29:45 +0200},
  year          = {2019},
}

@Online{Thoemmes2017,
  author  = {Markus Thömmes},
  date    = {2017-04-20},
  title   = {Squeezing the milliseconds: How to make serverless platforms blazing fast!},
  url     = {https://medium.com/openwhisk/squeezing-the-milliseconds-how-to-make-serverless-platforms-blazing-fast-aea0e9951bd0},
  urldate = {2021-05-04},
}

@Online{Hickey2020,
  author  = {Pat Hickey},
  date    = {2020-03-03},
  title   = {How Lucet and Wasmtime make a stronger compiler, together},
  url     = {https://www.fastly.com/blog/how-lucet-wasmtime-make-stronger-compiler-together},
  urldate = {2021-05-07},
}

@InProceedings{Shillaker2020,
  author    = {Simon Shillaker and Peter Pietzuch},
  booktitle = {2020 {USENIX} Annual Technical Conference ({USENIX} {ATC} 20)},
  title     = {Faasm: Lightweight Isolation for Efficient Stateful Serverless Computing},
  isbn      = {978-1-939133-14-4},
  pages     = {419--433},
  publisher = {{USENIX} Association},
  url       = {https://www.usenix.org/conference/atc20/presentation/shillaker},
  month     = jul,
  year      = {2020},
}

@InProceedings{Rausch2020,
  author    = {Thomas Rausch and Clemens Lachner and Pantelis A. Frangoudis and Philipp Raith and Schahram Dustdar},
  booktitle = {3rd {USENIX} Workshop on Hot Topics in Edge Computing (HotEdge 20)},
  title     = {Synthesizing Plausible Infrastructure Configurations for Evaluating Edge Computing Systems},
  publisher = {{USENIX} Association},
  url       = {https://www.usenix.org/conference/hotedge20/presentation/rausch},
  month     = jun,
  year      = {2020},
}

@Online{Ewasm2021,
  date    = {2021-05-09},
  title   = {Ethereum WebAssembly (ewasm)},
  url     = {https://ewasm.readthedocs.io/en/mkdocs/},
  urldate = {2021-05-09},
}

@Comment{jabref-meta: databaseType:biblatex;}
